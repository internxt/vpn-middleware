services:
  vpn-database:
    image: postgres:15
    container_name: vpn-database
    restart: always
    volumes:
      - ./infrastructure/database-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: vpn
    networks:
      - vpn-network
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  vpn-redis:
    image: redis:alpine
    container_name: vpn-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-example}
    restart: always
    networks:
      - vpn-network
    ports:
      - 6381:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s

  vpn-server:
    container_name: vpn-server
    build: 
      context: .
      dockerfile: development.Dockerfile
    volumes:
      - .:/usr/app
      - .env.development:/usr/app/.env.development
      - /usr/app/node_modules
    ports:
      - 3005:3005
    networks:
      - vpn-network
    environment: 
      NODE_ENV: development
    env_file:
      - .env.development
    depends_on:
      vpn-database:
        condition: service_healthy
      vpn-redis:
        condition: service_healthy

networks:
  vpn-network:
    name: vpn-network
